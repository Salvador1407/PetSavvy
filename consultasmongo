-----2 por cada uno usando aggregates
--------------------------------------------------------andrea
--devuelve la cantidad de animales con la afinidad "Tranquilo"
--para un albergue especifico
[
  {
    $match: {
      Afinidad: {
        $eq: "Tranquilo",
      },
      
     Albergue_Nombre: 
        "Centro de Adopcion Hogar Animal",
    },

  },
  {
    $group: {
      _id: null,
      JuguetonCount: {
        $sum: 1,
      },
    },
  },
]

--devuelve los animales de un albergue ordenados de menor a mayor de acuerdo a la edad
[
  {
    $match: { Albergue_Nombre: "Centro de Adopcion Hogar Animal" }
  },
  {
    $sort: { Edad: 1 }
  }
]

-------------------------------------------------------------Brenda-----------------------------------

----Devuelve la cantidad de medicamentos que fueron dados a un perro en específico 
db.Receta.find(
{Animal_id:2})
.count()

--------Obtener el animal con la edad más alta 
db.Animal.find().sort({edad:-1}).limit(1);


-------------------------------------------------------------Salvador-----------------------------------
--Obtener la cantidad de animales con el tamaño mayor o igual a 30 para un albergue en específico.
db.Animal.aggregate([
    {
      $match: {
        Albergue_Nombre: "Refugio de Animales Patitas",
        Tamanio: { $gte: 30 }
      }
    },
    {
      $count: "CantidadAnimales"
    }
])

--Obtener el animal con la menor edad según el nombre del Albergue ingresado.
db.Animal.aggregate([
  {
    $match: {
      Albergue_Nombre: "Refugio de Mascotas Patas Felices"
    }
  },
  {
    $sort: {
      Edad: 1
    }
  },
  {
    $limit: 1
  },
  {
    $project: {
      _id: 0,
      AnimalId: "$Id",
      Edad: "$Edad",
      Raza: "$Raza",
      Tamanio: "$Tamanio",
      Color: "$Color",
      Afinidad: "$Afinidad"
    }
  }
])
